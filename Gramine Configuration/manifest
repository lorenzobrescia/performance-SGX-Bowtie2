loader.entrypoint = "file:{{ gramine.libos }}"
loader.log_level = "none"

loader.env.LD_LIBRARY_PATH = "/lib:{{ arch_libdir }}:/usr/{{ arch_libdir }}"

loader.argv = ["/bowtie2-align-s", 
"-x", "/input/plain/Homo_sapiens_assembly38",
"-S", "/results/sample.sam",
"-p", "{{ ths }}",
"-1", "/input/plain/small1.fq.gz",
"-2", "/input/plain/small2.fq.gz",
]

libos.entrypoint = "/bowtie2-align-s"

fs.mounts = [
  { path = "/bowtie2-align-s", uri = "file:bowtie2-align-s" },
  { path = "/lib", uri = "file:{{ gramine.runtimedir() }}" },

  { path = "{{ arch_libdir }}", uri = "file:{{ arch_libdir }}" },
  { path = "/usr{{ arch_libdir }}", uri = "file:/usr{{ arch_libdir }}" },

  { path = "/input/plain/", uri = "file:input/plain/" }
]

{% if env.get('edmm', 0) == '1' %}
sgx.enclave_size = "32G"
sgx.edmm_enable = true
sgx.max_threads = 32
{% else %}
sgx.enclave_size = "8G"
sgx.edmm_enable = false
sgx.max_threads = 38
{% endif %}

sgx.trusted_files = [
  "file:{{ gramine.libos }}",
  "file:{{ gramine.runtimedir() }}/",
  "file:{{ arch_libdir }}/",
  "file:/usr/{{ arch_libdir }}/", 
  "file:bowtie2-align-s",

  "file:input/plain/",
 
  "file:/etc/host.conf",
  "file:/etc/hosts",
  "file:/etc/nsswitch.conf",
  "file:/etc/resolv.conf"
]

sgx.allowed_files = [
  "file:results/"
]